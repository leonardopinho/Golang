services:
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"  # OTLP gRPC
      - "8888:8888"  # Collector metrics
      - "8889:8889"  # Collector metrics
    depends_on:
      - zipkin

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  zip_code_service: # Service A
    build:
      context: .
      dockerfile: zip_code_service/Dockerfile
    container_name: zip_code_service
    ports:
      - "8080:8080"
    environment:
      - OTEL_SERVICE_NAME=zip_code_service
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - WEATHER_SERVICE_URL=http://weather_service:8081/get_weather
    depends_on:
      - weather_service
      - zipkin
      - otel-collector

  weather_service: # Service B
    build:
      context: .
      dockerfile: weather_service/Dockerfile
    container_name: weather_service
    ports:
      - "8081:8081"
    environment:
      - OTEL_SERVICE_NAME=weather_service
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
    depends_on:
      - zipkin
      - otel-collector
